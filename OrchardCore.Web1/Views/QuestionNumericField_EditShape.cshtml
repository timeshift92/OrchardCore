@using OrchardCore.ContentFields.Settings
@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore.ContentManagement.Utilities
@model OrchardCore.ContentFields.ViewModels.EditNumericFieldViewModel

@{
    var settings = Model.PartFieldDefinition.GetSettings<NumericFieldSettings>();
    string name = Model.PartFieldDefinition.DisplayName();
    decimal step = (decimal)Math.Pow(10, 0 - settings.Scale);
    decimal from = settings.Minimum.HasValue ? settings.Minimum.Value : 0;
    decimal to = settings.Maximum.HasValue ? settings.Maximum.Value : 10;
}

<div class="form-group">
    <div class="row">
        <div class="col-md-6 col-lg-4">
            <label asp-for="Value">@name</label>
            <select asp-for="Value"  class="form-control content-preview-select">
                   
                @if (!settings.Required)
                {
                    <option value="">@T["None"]</option>
                }
                @foreach(var opt in Model.Part.ContentItem.Content.BagPart.ContentItems)
                {
                    <option value="@Model.Part.ContentItem.Content.BagPart.ContentItems.IndexOf(opt)">@(Model.Part.ContentItem.Content.BagPart.ContentItems.IndexOf(opt) + 1)</option>
                }
            </select>
        </div>
    </div>
    @if (!String.IsNullOrEmpty(settings.Hint))
    {
        <span class="hint">@settings.Hint</span>
    }
</div>



<script at="Foot">
        console.log(this);
        var nullOpt =   '<option value="">@T["None"]</option>';
        var selectElem = $('#Question_RightAnswer_Value')
        function reRenderOptions(){
            selectElem.html(nullOpt) 
             $('TextArea[id$=_Answer_Answer_Html]').map((index,tArea) => {
             selectElem.append(`<option value="${index}"> ${index+1} </option>`) 
             })
             
        }
        function recreateEvents() {
            $('TextArea[id$=_Answer_Answer_Html]').map((idx, el) => {
                $(`#${el.id}`).trumbowyg().on('tbwchange',(e)=>  {
                    reRenderOptions()
                })
            })    
        }
        $(document).on('click', '.add-widget', function (event) { 
            console.log('created')
            setTimeout(()=> recreateEvents() , 50)  });
        recreateEvents()
        setTimeout(()=>            reRenderOptions(),50)
</script>